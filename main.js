!function(){"use strict";var e=class{constructor(e,t){let{data:s,handleImageClick:r,handleDeleteButton:n,handleLikeButton:i}=e;this._name=s.name,this._link=s.link,this._id=s._id,this._isLiked=s.isLiked,this._cardSelctor=t,this._handleImageClick=r,this._handleDeleteButton=n,this._handleLikeButton=i}_setEventListeners(){this._cardElement.querySelector(".elements__delete-button").addEventListener("click",(()=>{this._handleDeleteButton(this)})),this._cardElement.querySelector(".elements__like-button").addEventListener("click",(()=>{this._handleLikeButton(this)})),this._cardImage.addEventListener("click",(()=>{this._handleImageClick(this._data)}))}removeCardElement(){this._cardElement.remove(),this._cardElement=null}isLiked(){return this._isLiked}_renderLikes(){this._isLiked?this._cardElement.querySelector(".elements__like-button").classList.add("elements__like-button_active"):this._cardElement.querySelector(".elements__like-button").classList.remove("elements__like-button_active")}setIsLiked(e){this._isLiked=e,this._renderLikes()}getCardElement(){return this._cardElement=document.querySelector(this._cardSelctor).content.querySelector(".elements__cards").cloneNode(!0),this._cardImage=this._cardElement.querySelector(".elements__image"),this._cardTitle=this._cardElement.querySelector(".elements__title"),this._cardImage.src=this._link,this._cardImage.alt=this._name,this._cardTitle.textContent=this._name,this._renderLikes(),this._setEventListeners(),this._cardElement}},t=class{constructor(e,t){this._data=e,this._formSelector=e.formSelector,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formElement=t,this._inputList=[...this._formElement.querySelectorAll(this._inputSelector)],this._buttonElement=t.querySelector(e.submitButtonSelector)}_showInputError(e,t){this._errorElement=this._formElement.querySelector(`.${e.id}-error`),e.classList.add(this._inputErrorClass),this._errorElement.textContent=t,this._errorElement.classList.add(this._errorClass)}_hideInputError(e){this._errorElement=this._formElement.querySelector(`.${e.id}-error`),e.classList.remove(this._inputErrorClass),this._errorElement.classList.remove(this._errorClass),this._errorElement.textContent=""}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}_hasInvalidInput(){return this._inputList.some((e=>!e.validity.valid))}_toggleButtonState(){this._hasInvalidInput()?this._disableButton():this._enableButton()}_setEventListeners(){this._toggleButtonState(),this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}_disableButton(){this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.setAttribute("disabled","true")}_enableButton(){this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.removeAttribute("disabled")}enableValidation(){this._formElement.addEventListener("submit",(e=>{e.preventDefault(),this._disableButton()})),this._setEventListeners()}resetValidation(){this._inputList.forEach((e=>{this._hideInputError(e)}))}};class s{constructor(e){this._popupElement=document.querySelector(e)}_handleEscClose=e=>{"Escape"===e.key&&this.close()};setEventListeners(){this._closeButton=this._popupElement.querySelector(".modal__close"),this._closeButton.addEventListener("click",(()=>{this.close()})),this._popupElement.addEventListener("mousedown",(e=>{e.target===e.currentTarget&&this.close()}))}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}}class r extends s{constructor(e,t){let{handleFormSubmit:s}=e;super(t),this._handleFormSubmit=s,this._popupForm=this._popupElement.querySelector(".modal__form"),this._inputList=document.querySelectorAll(".modal__input"),this._saveButton=this._popupForm.querySelector(".modal__button-save"),this._saveButtonText=this._saveButton.textContent}_getInputValues(){return this._formContent={},this._inputList.forEach((e=>{this._formContent[e.name]=e.value})),this._formContent}setEventListeners(){this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())})),super.setEventListeners()}resetForm(){this._popupForm.reset()}handleLoadingText(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Saving...";this._saveButton.textContent=e?t:this._saveButtonText}}const n=document.querySelector(".profile__edit-button"),i=document.querySelector(".profile__add-button"),o=document.querySelector(".profile__avatar-button"),a=document.querySelector(".modal__input_name"),l=document.querySelector(".modal__input_job"),d={},h=new class{constructor(e,t){this._baseUrl=e,this._header=t}_checkPromise(e){return e.ok?e.json():Promise.reject(`Error:${e.status}`)}_getFetch(e,t){return fetch(e,t).then(this._checkPromise)}getInitialCards(){return this._getFetch(`${this._baseUrl}/cards`,{headers:this._header})}getUserInfo(){return this._getFetch(`${this._baseUrl}/users/me`,{headers:this._header}).then((e=>e))}editProfile(e,t){return this._getFetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._header,body:JSON.stringify({name:e,about:t})})}addNewCard(e,t){return this._getFetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._header,body:JSON.stringify({name:e,link:t})})}deleteCard(e){return this._getFetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._header})}addLikes(e){return this._getFetch(`${this._baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this._header})}removeLikes(e){return this._getFetch(`${this._baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this._header})}updateAvatar(e){return this._getFetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._header,body:JSON.stringify({avatar:e})})}}("https://around-api.en.tripleten-services.com/v1",{authorization:"57aa7463-f839-44ea-835b-493cff8bea63","Content-Type":"application/json"});h.getInitialCards().then((e=>{e.forEach((e=>{m.appendItem(u(e))}))})).catch(console.error),h.getUserInfo().then((e=>{v.setUserInfo({name:e.name,job:e.about}),v.setUserAvatar(e.avatar)})).catch((e=>{console.error(e)}));const _=e=>{b.open(),b.setHandleDeleteMethod((()=>{h.deleteCard(e._id).then((()=>{e.removeCardElement(),b.close()})).catch((e=>console.error(e)))}))},c=e=>{e.isLiked()?h.removeLikes(e._id).then((t=>{e.setIsLiked(t.isLiked)})).catch((e=>console.error(e))):h.addLikes(e._id).then((t=>{e.setIsLiked(t.isLiked)})).catch((e=>console.error(e)))},u=t=>new e({data:t,handleImageClick:()=>{p.open(t)},handleDeleteButton:_,handleLikeButton:c},"#card-templete").getCardElement(),m=new class{constructor(e,t){let{items:s,renderer:r}=e;this._items=s,this._renderer=r,this._container=document.querySelector(t)}rendererItems(){this._items.forEach((e=>{this._renderer(e)}))}prependItem(e){this._container.prepend(e)}appendItem(e){this._container.append(e)}}({items:[],renderer:u},".elements__container"),p=new class extends s{constructor(e){super(e),this._popupImage=this._popupElement.querySelector(".modal__picture_large"),this._popupImageTitle=this._popupElement.querySelector(".modal__picture_title")}open(e){this._popupImage.src=e.link,this._popupImage.alt=e.name,this._popupImageTitle.textContent=e.name,super.open()}}("#modal__picture"),v=new class{constructor(e,t){let{nameSelector:s,jobSelector:r,avatarSelector:n}=e;this._profileName=document.querySelector(s),this._profileJob=document.querySelector(r),this._profileAvatar=document.querySelector(n)}getUserInfo(){return{name:this._profileName.textContent,job:this._profileJob.textContent,avatar:this._profileAvatar.src}}setUserInfo(e){let{name:t,job:s}=e;this._profileName.textContent=t,this._profileJob.textContent=s}setUserAvatar(e){this._profileAvatar.src=e}}({nameSelector:".profile__title",jobSelector:".profile__subtitle",avatarSelector:".profile__avatar"},"#modal__edit"),E=new r({handleFormSubmit:e=>{E.handleLoadingText(!0),h.addNewCard(e.name,e.link).then((e=>{m.prependItem(u(e)),E.resetForm(),E.close()})).catch((e=>console.error(e))).finally((()=>{E.handleLoadingText(!1)}))}},"#modal__add"),L=new r({handleFormSubmit:e=>{L.handleLoadingText(!0),h.editProfile(e.title,e.description).then((e=>{const t={};t.name=e.name,t.job=e.about,v.setUserInfo(t)})).catch((e=>console.error(e))).finally((()=>{L.handleLoadingText(!1)}))}},"#modal__edit"),b=new class extends s{constructor(e){super(e)}setHandleDeleteMethod(e){this._handleDeleteSubmit=e}setEventListeners(){this._popupElement.querySelector(".modal__button-confirm").addEventListener("click",(e=>{e.preventDefault(),this._handleDeleteSubmit()})),super.setEventListeners()}}("#modal__delete"),S=new r({handleFormSubmit:e=>{S.handleLoadingText(!0),h.updateAvatar(e.avatar).then((e=>{v.setUserAvatar(e.avatar)})).catch((e=>console.error(e))).finally((()=>S.handleLoadingText(!1)))}},"#modal__avatar");var f;p.setEventListeners(),E.setEventListeners(),L.setEventListeners(),b.setEventListeners(),S.setEventListeners(),n.addEventListener("click",(()=>{L.open();const e=v.getUserInfo();a.value=e.name,l.value=e.job,d["profile-form"].resetValidation()})),i.addEventListener("click",(()=>{E.open()})),o.addEventListener("click",(()=>{S.open()})),f={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button-save",inactiveButtonClass:"modal__button-save_inactive",inputErrorClass:"modal__input_type_error",errorClass:"modal__input-error_active"},Array.from(document.querySelectorAll(f.formSelector)).forEach((e=>{const s=new t(f,e),r=e.getAttribute("id");d[r]=s,s.enableValidation()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,